# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0' # Not needed with a .ruby-version file
      # - run: bundle exec rake
      - name: Install Dependencies
        run: |
          gem update --system
          gem install bundler:2.4.5

      - name: Install Gems
        run: |
          bundle install
      # Add or replace database setup steps here
      - name: Set up database schema
        run: rake db:reset db:migrate db:seed
      - name: fix active storage
        run: rails active_storage:update; rails db:migrate

      - name: ENV test
        run: rails db:migrate RAILS_ENV=test
      # Add or replace test runners here
      - name: Run tests
        run: rake test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.0' # Not needed with a .ruby-version file
      - name: Install Dependencies
        run: |
          gem update --system
          gem install bundler:2.4.5

      - name: Install Gems
        run: |
          bundle install
      # Add or replace any other lints here
      # - name: Security audit dependencies
        # run: bundle exec bundle audit
      - name: Security audit application code
        run: bin/brakeman -q -w2
      - name: Lint Ruby files
        run: bin/rubocop --parallel
